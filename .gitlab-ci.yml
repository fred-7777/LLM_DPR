stages:
  - test
  - lint
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip/
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install --upgrade pip
  - pip install -r requirements.txt

test:
  stage: test
  script:
    - python -m pytest tests/ -v --cov=dpr_qa_system --cov-report=xml --cov-report=term
  coverage: '/TOTAL.+?(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml
  only:
    - merge_requests
    - main
    - develop

lint:
  stage: lint
  script:
    - pip install flake8 black isort
    - flake8 --max-line-length=88 --extend-ignore=E203,W503 *.py
    - black --check --diff *.py
    - isort --check-only --diff *.py
  allow_failure: true
  only:
    - merge_requests
    - main
    - develop

security_scan:
  stage: test
  script:
    - pip install bandit safety
    - bandit -r . -f json -o bandit-report.json || true
    - safety check --json --output safety-report.json || true
  artifacts:
    reports:
      sast: bandit-report.json
    paths:
      - bandit-report.json
      - safety-report.json
  allow_failure: true
  only:
    - merge_requests
    - main

build_docs:
  stage: build
  script:
    - pip install sphinx sphinx-rtd-theme
    - mkdir -p docs
    - sphinx-quickstart -q -p "DPR QA System" -a "Your Name" -v "1.0" --ext-autodoc --ext-viewcode docs/
    - sphinx-build -b html docs/ public/
  artifacts:
    paths:
      - public/
  only:
    - main

deploy_demo:
  stage: deploy
  script:
    - echo "Deploying demo application..."
    - mkdir -p public
    - cp README.md public/
    - cp -r *.py public/
  artifacts:
    paths:
      - public/
  environment:
    name: demo
    url: $CI_PAGES_URL
  only:
    - main

pages:
  stage: deploy
  dependencies:
    - build_docs
  script:
    - echo "Deploying GitLab Pages..."
  artifacts:
    paths:
      - public/
  only:
    - main 